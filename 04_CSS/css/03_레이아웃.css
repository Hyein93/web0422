@charset "utf-8";

/* 
    선택자의 종류
    1. 요소(태그, 타입)
    2. 그룹: , 
    3.클래스 선택자: .이름
*/

/* 레이아웃 유형1의 전체 크기 */
.container1 {
    width: 1200px;
    /* 컨텐츠를 가로 가운데 배치 */
    /* margin의 값은 총4개까지 작성 가능 */
    margin: 0 auto; /*컨텐츠 가로 중앙 배치*/
}

/* .div1~4 레이아웃 유형1의 각 박스 크기와 배경색 */
.div1 {
    background: 
    rgb(0, 255, 200);
    height: 100px;
}
.div2 {
    background: 
    rgb(255, 0, 212);
    height: 300px;
}
.div3 {
    background: 
    rgb(255, 153, 0);
    height: 200;
}
.div4 {
    background: 
    rgb(111, 0, 255);
    height: 100;
}

/* 레이아웃 유형2- 가로 */
/* 
    레이아웃 (layout)
    1.floating layout
    2.flexible layout
    3.grid layout
    4.positioning
    5.블록레벨 요소 속성을 인라인 요소 속성으로 바꾼다.
*/
/*
    5번 display(표시방식)
    display: block; -> 인라인 요소 속성을 블록레벨 요소 속성으로 바꾼다.
    display: inline; ->블록레벨 요소 속성을 인라인 요소 속성으로 바꾼다.
    display: inline-block; -> 인라인 요소+블록레벨 요소 두 속성을 모두 갖는다.
    display: none; -> 화명에서 요소를 제거
    
    ctrl+d
    vscode: 다중선택 단축키

    블록레벨요소
    1. display: block;
    2. heigth 배치(위에서 아래, 줄바꿈)
    3. width는 100% heigth는 내용 크기
    4. width/heigth 크기가 지정 O

    인라인요소
    display: inline;
        - width 배치 (왼쪽에서 오른쪽, 줄바꿈x)
        - width/heigth는 내용 크기
        - width/heigth 크기가 지정 X
    display: inline-block;
        - width/heigth 크기가 지정 O
 */
/* .div5~7 레이아웃 유형2의 각 박스 크기와 배경색 */
.container2 {
    display: inline-block;
}
.div5 {
    background: gold;
    width: 400px;
    height: 200px;
}
.div6 {
    background: hotpink;
    width: 400px;
    height: 200px;
}
.div7 {
    background: plum;
    width: 400px;
    height: 200px;
}